!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/cdk/a11y"),require("@angular/cdk/keycodes"),require("@angular/forms"),require("@angular/common"),require("@angular/core"),require("ng-zorro-antd/core"),require("ng-zorro-antd/icon")):"function"==typeof define&&define.amd?define("ng-zorro-antd/switch",["exports","@angular/cdk/a11y","@angular/cdk/keycodes","@angular/forms","@angular/common","@angular/core","ng-zorro-antd/core","ng-zorro-antd/icon"],n):n((e["ng-zorro-antd"]=e["ng-zorro-antd"]||{},e["ng-zorro-antd"]["switch"]={}),e.ng.cdk.a11y,e.ng.cdk.keycodes,e.ng.forms,e.ng.common,e.ng.core,e["ng-zorro-antd"].core,e["ng-zorro-antd"].icon)}(this,function(e,n,t,o,i,r,c,a){"use strict";function s(e,n,t,o){var i,r=arguments.length,c=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,n,t,o);else for(var a=e.length-1;0<=a;a--)(i=e[a])&&(c=(r<3?i(c):3<r?i(n,t,c):i(n,t))||c);return 3<r&&c&&Object.defineProperty(n,t,c),c}function d(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)}var u=function(){function e(e,n){this.cdr=e,this.focusMonitor=n,this.checked=!1,this.onChange=function(){return null},this.onTouched=function(){return null},this.nzLoading=!1,this.nzDisabled=!1,this.nzControl=!1}return e.prototype.hostClick=function(e){e.preventDefault(),this.nzDisabled||this.nzLoading||this.nzControl||this.updateValue(!this.checked)},e.prototype.updateValue=function(e){this.checked!==e&&(this.checked=e,this.onChange(this.checked))},e.prototype.onKeyDown=function(e){this.nzControl||this.nzDisabled||this.nzLoading||(e.keyCode===t.LEFT_ARROW?(this.updateValue(!1),e.preventDefault()):e.keyCode===t.RIGHT_ARROW?(this.updateValue(!0),e.preventDefault()):e.keyCode!==t.SPACE&&e.keyCode!==t.ENTER||(this.updateValue(!this.checked),e.preventDefault()))},e.prototype.focus=function(){this.focusMonitor.focusVia(this.switchElement.nativeElement,"keyboard")},e.prototype.blur=function(){this.switchElement.nativeElement.blur()},e.prototype.ngAfterViewInit=function(){var n=this;this.focusMonitor.monitor(this.switchElement.nativeElement,!0).subscribe(function(e){e||Promise.resolve().then(function(){return n.onTouched()})})},e.prototype.writeValue=function(e){this.checked=e,this.cdr.markForCheck()},e.prototype.registerOnChange=function(e){this.onChange=e},e.prototype.registerOnTouched=function(e){this.onTouched=e},e.prototype.setDisabledState=function(e){this.nzDisabled=e,this.cdr.markForCheck()},e.decorators=[{type:r.Component,args:[{selector:"nz-switch",exportAs:"nzSwitch",preserveWhitespaces:!1,template:'<button type="button" #switchElement\n  nz-wave\n  class="ant-switch"\n  [disabled]="nzDisabled"\n  [class.ant-switch-checked]="checked"\n  [class.ant-switch-loading]="nzLoading"\n  [class.ant-switch-disabled]="nzDisabled"\n  [class.ant-switch-small]="nzSize === \'small\'"\n  [nzWaveExtraNode]="true"\n  (keydown)="onKeyDown($event)">\n  <i *ngIf="nzLoading" nz-icon type="loading" class="ant-switch-loading-icon"></i>\n  <span class="ant-switch-inner">\n    <span>\n      <ng-container *ngIf="checked">\n        <ng-container *nzStringTemplateOutlet="nzCheckedChildren">{{ nzCheckedChildren }}</ng-container>\n      </ng-container>\n      <ng-container *ngIf="!checked">\n        <ng-container *nzStringTemplateOutlet="nzUnCheckedChildren">{{ nzUnCheckedChildren }}</ng-container>\n      </ng-container>\n    </span>\n  </span>\n</button>',changeDetection:r.ChangeDetectionStrategy.OnPush,encapsulation:r.ViewEncapsulation.None,providers:[{provide:o.NG_VALUE_ACCESSOR,useExisting:r.forwardRef(function(){return e}),multi:!0}],host:{"(click)":"hostClick($event)"},styles:["\n      nz-switch {\n        display: inline-block;\n      }\n    "]}]}],e.ctorParameters=function(){return[{type:r.ChangeDetectorRef},{type:n.FocusMonitor}]},e.propDecorators={switchElement:[{type:r.ViewChild,args:["switchElement"]}],nzLoading:[{type:r.Input}],nzDisabled:[{type:r.Input}],nzControl:[{type:r.Input}],nzCheckedChildren:[{type:r.Input}],nzUnCheckedChildren:[{type:r.Input}],nzSize:[{type:r.Input}]},s([c.InputBoolean(),d("design:type",Object)],e.prototype,"nzLoading",void 0),s([c.InputBoolean(),d("design:type",Object)],e.prototype,"nzDisabled",void 0),s([c.InputBoolean(),d("design:type",Object)],e.prototype,"nzControl",void 0),e}(),l=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{exports:[u],declarations:[u],imports:[i.CommonModule,c.NzWaveModule,a.NzIconModule,c.NzAddOnModule]}]}],e}();e.NzSwitchComponent=u,e.NzSwitchModule=l,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng-zorro-antd-switch.umd.min.js.map